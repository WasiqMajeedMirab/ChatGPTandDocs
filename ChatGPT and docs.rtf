{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red20\green67\blue174;\red255\green255\blue254;\red46\green49\blue51;
\red186\green6\blue115;\red162\green0\blue16;\red77\green80\blue85;\red24\green25\blue27;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c9412\c35294\c73725;\cssrgb\c100000\c100000\c99608;\cssrgb\c23529\c25098\c26275;
\cssrgb\c78824\c15294\c52549;\cssrgb\c70196\c7843\c7059;\cssrgb\c37255\c38824\c40784;\cssrgb\c12549\c12941\c14118;\cssrgb\c3529\c52157\c56863;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 const\cf4 \strokec4  \cf5 \strokec5 API_KEY\cf4 \strokec4 =\cf6 \strokec6 \'93xxxxxx\'94\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 const\cf4 \strokec4  \cf5 \strokec5 MODEL_TYPE\cf4 \strokec4  = \cf6 \strokec6 "gpt-3.5-turbo"\cf4 \strokec4 ; \cf7 \strokec7 //chatGPT model\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 // Creates a custom menu in Google Docs\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf8 \strokec8 onOpen\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 DocumentApp\cf4 \strokec4 .\cf8 \strokec8 getUi\cf4 \strokec4 ().\cf8 \strokec8 createMenu\cf4 \strokec4 (\cf6 \strokec6 "ChatGPT"\cf4 \strokec4 )\cb1 \
\cb3       .\cf8 \strokec8 addItem\cf4 \strokec4 (\cf6 \strokec6 "Generate Prompt"\cf4 \strokec4 , \cf6 \strokec6 "generatePrompt"\cf4 \strokec4 )\cb1 \
\cb3       .\cf8 \strokec8 addItem\cf4 \strokec4 (\cf6 \strokec6 "Generate Linkedin Post"\cf4 \strokec4 , \cf6 \strokec6 "generateIdeas"\cf4 \strokec4 )\cb1 \
\cb3       .\cf8 \strokec8 addToUi\cf4 \strokec4 ();\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 // Generates prompt based on the selected text and adds it to the document\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf8 \strokec8 generateIdeas\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 doc\cf4 \strokec4  = \cf5 \strokec5 DocumentApp\cf4 \strokec4 .\cf8 \strokec8 getActiveDocument\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 selectedText\cf4 \strokec4  = \cf8 \strokec8 doc\cf4 \strokec4 .\cf8 \strokec8 getSelection\cf4 \strokec4 ().\cf8 \strokec8 getRangeElements\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ].\cf8 \strokec8 getElement\cf4 \strokec4 ().\cf8 \strokec8 asText\cf4 \strokec4 ().\cf8 \strokec8 getText\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 body\cf4 \strokec4  = \cf8 \strokec8 doc\cf4 \strokec4 .\cf8 \strokec8 getBody\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 prompt\cf4 \strokec4  = \cf6 \strokec6 "Help me write 5 Linkedin post on "\cf4 \strokec4  + \cf8 \strokec8 selectedText\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 temperature\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 maxTokens\cf4 \strokec4  = \cf9 \strokec9 2060\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 requestBody\cf4 \strokec4  = \{\cb1 \
\cb3     \cf8 \strokec8 model\cf4 \strokec4 : \cf5 \strokec5 MODEL_TYPE\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 messages\cf4 \strokec4 : [\{\cf8 \strokec8 role\cf4 \strokec4 : \cf6 \strokec6 "user"\cf4 \strokec4 , \cf8 \strokec8 content\cf4 \strokec4 : \cf8 \strokec8 prompt\cf4 \strokec4 \}],\cb1 \
\cb3     \cf8 \strokec8 temperature\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 max_tokens\cf4 \strokec4 : \cf8 \strokec8 maxTokens\cf4 \strokec4 ,\cb1 \
\cb3   \};\cb1 \
\
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 requestOptions\cf4 \strokec4  = \{\cb1 \
\cb3     \cf8 \strokec8 method\cf4 \strokec4 : \cf6 \strokec6 "POST"\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 headers\cf4 \strokec4 : \{\cb1 \
\cb3       \cf6 \strokec6 "Content-Type"\cf4 \strokec4 : \cf6 \strokec6 "application/json"\cf4 \strokec4 ,\cb1 \
\cb3       \cf5 \strokec5 Authorization\cf4 \strokec4 : \cf6 \strokec6 "Bearer "\cf4 \strokec4  + \cf5 \strokec5 API_KEY\cf4 \strokec4 ,\cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 \strokec8 payload\cf4 \strokec4 : \cf5 \strokec5 JSON\cf4 \strokec4 .\cf8 \strokec8 stringify\cf4 \strokec4 (\cf8 \strokec8 requestBody\cf4 \strokec4 ),\cb1 \
\cb3   \};\cb1 \
\
\
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 response\cf4 \strokec4  = \cf5 \strokec5 UrlFetchApp\cf4 \strokec4 .\cf8 \strokec8 fetch\cf4 \strokec4 (\cf6 \strokec6 "https://api.openai.com/v1/chat/completions"\cf4 \strokec4 , \cf8 \strokec8 requestOptions\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 responseText\cf4 \strokec4  = \cf8 \strokec8 response\cf4 \strokec4 .\cf8 \strokec8 getContentText\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 json\cf4 \strokec4  = \cf5 \strokec5 JSON\cf4 \strokec4 .\cf8 \strokec8 parse\cf4 \strokec4 (\cf8 \strokec8 responseText\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 generatedText\cf4 \strokec4  = \cf8 \strokec8 json\cf4 \strokec4 [\cf6 \strokec6 'choices'\cf4 \strokec4 ][\cf9 \strokec9 0\cf4 \strokec4 ][\cf6 \strokec6 'message'\cf4 \strokec4 ][\cf6 \strokec6 'content'\cf4 \strokec4 ];\cb1 \
\cb3   \cf5 \strokec5 Logger\cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf8 \strokec8 generatedText\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 body\cf4 \strokec4 .\cf8 \strokec8 appendParagraph\cf4 \strokec4 (\cf8 \strokec8 generatedText\cf4 \strokec4 .\cf8 \strokec8 toString\cf4 \strokec4 ());\cb1 \
\cb3 \}\cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 // Generates prompt based on the selected text and adds it to the document\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 function\cf4 \strokec4  \cf8 \strokec8 generatePrompt\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 doc\cf4 \strokec4  = \cf5 \strokec5 DocumentApp\cf4 \strokec4 .\cf8 \strokec8 getActiveDocument\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 selectedText\cf4 \strokec4  = \cf8 \strokec8 doc\cf4 \strokec4 .\cf8 \strokec8 getSelection\cf4 \strokec4 ().\cf8 \strokec8 getRangeElements\cf4 \strokec4 ()[\cf9 \strokec9 0\cf4 \strokec4 ].\cf8 \strokec8 getElement\cf4 \strokec4 ().\cf8 \strokec8 asText\cf4 \strokec4 ().\cf8 \strokec8 getText\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 body\cf4 \strokec4  = \cf8 \strokec8 doc\cf4 \strokec4 .\cf8 \strokec8 getBody\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 prompt\cf4 \strokec4  = \cf6 \strokec6 "Generate an essay on "\cf4 \strokec4  + \cf8 \strokec8 selectedText\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 temperature\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 maxTokens\cf4 \strokec4  = \cf9 \strokec9 2060\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 requestBody\cf4 \strokec4  = \{\cb1 \
\cb3     \cf8 \strokec8 model\cf4 \strokec4 : \cf5 \strokec5 MODEL_TYPE\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 messages\cf4 \strokec4 : [\{\cf8 \strokec8 role\cf4 \strokec4 : \cf6 \strokec6 "user"\cf4 \strokec4 , \cf8 \strokec8 content\cf4 \strokec4 : \cf8 \strokec8 prompt\cf4 \strokec4 \}],\cb1 \
\cb3     \cf8 \strokec8 temperature\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 max_tokens\cf4 \strokec4 : \cf8 \strokec8 maxTokens\cf4 \strokec4 ,\cb1 \
\cb3   \};\cb1 \
\
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 requestOptions\cf4 \strokec4  = \{\cb1 \
\cb3     \cf8 \strokec8 method\cf4 \strokec4 : \cf6 \strokec6 "POST"\cf4 \strokec4 ,\cb1 \
\cb3     \cf8 \strokec8 headers\cf4 \strokec4 : \{\cb1 \
\cb3       \cf6 \strokec6 "Content-Type"\cf4 \strokec4 : \cf6 \strokec6 "application/json"\cf4 \strokec4 ,\cb1 \
\cb3       \cf5 \strokec5 Authorization\cf4 \strokec4 : \cf6 \strokec6 "Bearer "\cf4 \strokec4  + \cf5 \strokec5 API_KEY\cf4 \strokec4 ,\cb1 \
\cb3     \},\cb1 \
\cb3     \cf8 \strokec8 payload\cf4 \strokec4 : \cf5 \strokec5 JSON\cf4 \strokec4 .\cf8 \strokec8 stringify\cf4 \strokec4 (\cf8 \strokec8 requestBody\cf4 \strokec4 ),\cb1 \
\cb3   \};\cb1 \
\
\
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 response\cf4 \strokec4  = \cf5 \strokec5 UrlFetchApp\cf4 \strokec4 .\cf8 \strokec8 fetch\cf4 \strokec4 (\cf6 \strokec6 "https://api.openai.com/v1/chat/completions"\cf4 \strokec4 , \cf8 \strokec8 requestOptions\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 responseText\cf4 \strokec4  = \cf8 \strokec8 response\cf4 \strokec4 .\cf8 \strokec8 getContentText\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 json\cf4 \strokec4  = \cf5 \strokec5 JSON\cf4 \strokec4 .\cf8 \strokec8 parse\cf4 \strokec4 (\cf8 \strokec8 responseText\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 generatedText\cf4 \strokec4  = \cf8 \strokec8 json\cf4 \strokec4 [\cf6 \strokec6 'choices'\cf4 \strokec4 ][\cf9 \strokec9 0\cf4 \strokec4 ][\cf6 \strokec6 'message'\cf4 \strokec4 ][\cf6 \strokec6 'content'\cf4 \strokec4 ];\cb1 \
\cb3   \cf5 \strokec5 Logger\cf4 \strokec4 .\cf8 \strokec8 log\cf4 \strokec4 (\cf8 \strokec8 generatedText\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 body\cf4 \strokec4 .\cf8 \strokec8 appendParagraph\cf4 \strokec4 (\cf8 \strokec8 generatedText\cf4 \strokec4 .\cf8 \strokec8 toString\cf4 \strokec4 ());\cb1 \
\cb3 \}\cb1 \
}